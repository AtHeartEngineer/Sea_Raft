[package]
name = "sea_raft_rust"
version = "0.1.0"
authors = ["AtHeartEngineer"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
js-sys = "0.3.60"
wasm-bindgen = "0.2.83"
bevy = "0.8.0"
rand = "0.8.5"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.js_sys
wee_alloc = { version = "0.4.5", optional = true }
bevy_rapier2d = "0.17.0"

[dependencies.web-sys]
version = "0.3"
features = [
  'console',
  'CanvasRenderingContext2d',
  'Document',
  'Element',
  'HtmlCanvasElement',
  'Window',
  "HtmlImageElement"
]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size for release.
opt-level = "s"
lto = "thin"

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

[workspace]
resolver = "2" # Important! wgpu/Bevy needs this!
